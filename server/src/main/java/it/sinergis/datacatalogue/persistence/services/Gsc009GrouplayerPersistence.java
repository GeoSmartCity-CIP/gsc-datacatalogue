/*
 * Created on 18 dic 2015 ( Time 16:29:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.sinergis.datacatalogue.persistence.services;

import java.util.List;
import java.util.Map;

import javax.persistence.EntityManager;

import it.sinergis.datacatalogue.bean.jpa.Gsc009GrouplayerEntity;

/**
 * Basic persistence operations for entity "Gsc009Grouplayer"
 * 
 * This Bean has a basic Primary Key : Long
 *
 * @author Telosys Tools Generator
 *
 */
public interface Gsc009GrouplayerPersistence extends GenericPersistence{

	/**
	 * Deletes the given entity <br>
	 * Transactional operation ( begin transaction and commit )
	 * @param gsc009Grouplayer
	 * @return true if found and deleted, false if not found
	 */
	public boolean delete(Gsc009GrouplayerEntity gsc009Grouplayer) ;

	/**
	 * Deletes the entity by its Primary Key <br>
	 * Transactional operation ( begin transaction and commit )
	 * @param id
	 * @return true if found and deleted, false if not found
	 */
	public boolean delete(Long id) ;

	/**
	 * Deletes the entity by its Primary Key <br>
	 * no Transactional operation ( no transaction involved )
	 * @param id
	 * @return true if found and deleted, false if not found
	 */
	public boolean deleteNoTrans(Long id,EntityManager em);
	
	/**
	 * Inserts the given entity and commit <br>
	 * Transactional operation ( begin transaction and commit )
	 * @param gsc009Grouplayer
	 */
	public void insert(Gsc009GrouplayerEntity gsc009Grouplayer) ;

	/**
	 * Loads the entity for the given Primary Key <br>
	 * @param id
	 * @return the entity loaded (or null if not found)
	 */
	public Gsc009GrouplayerEntity load(Long id) ;

	/**
	 * Loads ALL the entities (use with caution)
	 * @return
	 */
	public List<Gsc009GrouplayerEntity> loadAll() ;

	/**
	 * Loads a list of entities using the given "named query" without parameter 
	 * @param queryName
	 * @return
	 */
	public List<Gsc009GrouplayerEntity> loadByNamedQuery(String queryName) ;

	/**
	 * Loads a list of entities using the given "named query" with parameters 
	 * @param queryName
	 * @param queryParameters
	 * @return
	 */
	public List<Gsc009GrouplayerEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) ;

	/**
	 * Saves (create or update) the given entity <br>
	 * Transactional operation ( begin transaction and commit )
	 * @param gsc009Grouplayer
	 * @return
	 */
	public Gsc009GrouplayerEntity save(Gsc009GrouplayerEntity gsc009Grouplayer) ;

	/**
	 * Search the entities matching the given search criteria
	 * @param criteria
	 * @return
	 */
	public List<Gsc009GrouplayerEntity> search( Map<String, Object> criteria ) ;

	/**
	 * Count all the occurrences
	 * @return
	 */
	public long countAll();
	
	/** NO-SQL METODS **/
	
	/**
	 * Load grouplayers using native query
	 * @param query native query
	 * @return list of grouplayers
	 */
	public  List<Gsc009GrouplayerEntity> getGroupLayers(String query);
	
	/**
	 * Delete from each record of this table all the instances of parameter that appear in a list within the json field.
	 * @param query native query
	 * @return number of rows affected by modification
	 */
	public int deleteFromList(String query,EntityManager em);
	
}
