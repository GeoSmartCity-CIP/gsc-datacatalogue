/*
 * Created on 18 dic 2015 ( Time 16:29:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.sinergis.datacatalogue.test.service;

import org.apache.commons.lang3.StringUtils;
import org.junit.Assert;
import org.junit.Test;

import it.sinergis.datacatalogue.common.Constants;
import it.sinergis.datacatalogue.services.DatasetsService;
import it.sinergis.datacatalogue.services.DatasourcesService;
import it.sinergis.datacatalogue.services.ServiceCommons;

/**
 * JUnit test case for Gsc007Dataset persistence service
 * 
 * @author Telosys Tools Generator
 *
 */
public class DatasetServiceTest extends ServiceCommons {

	final String ID_ORGANIZATION = "28";
	final String CREATE_DATASOURCE_SHAPE = "{\"datasourcename\":\"DSShapeTest\",\"organization\":\"" + ID_ORGANIZATION
			+ "\",\"type\":\"SHAPE\",\"description\":\"SHAPE file\",\"updated\":\"true\",\"path\":\"T:\\\\MDeMeo\\\\dati\\\\bologna\\\\shape\\\\\"}";

	@Test
	public void testDasetsServiceShape() throws Exception {

		String idDatasource = "";
		// For this test we assume the organization exists with the given ID, if
		// it doesn't the test will return success.
		DatasetsService datasetDS = new DatasetsService();
		DatasourcesService datasourceDS = new DatasourcesService();

		try {
			System.out.println("-------");
			System.out.println("Test datasets service start");
			System.out.println("-------");

			String jsonDS = datasourceDS.createDatasource(CREATE_DATASOURCE_SHAPE);
			idDatasource = getFieldValueFromJsonText(jsonDS, Constants.ID);
			Assert.assertTrue("Datasource created with id: " + idDatasource, idDatasource != null);

			String createDatasetJSON = "{\"datasetname\": \"datasetSHAPETest\",\"realname\": \"zone.shp\",\"iddatasource\":\""
					+ idDatasource + "\",\"description\": \"descrizione\"}";
			String jsonDataset = datasetDS.createDataset(createDatasetJSON);
			Assert.assertTrue(getFieldValueFromJsonText(jsonDataset, Constants.STATUS_FIELD)
					.equalsIgnoreCase(Constants.STATUS_DONE));
			String idDataset = getFieldValueFromJsonText(jsonDataset, Constants.ID);

			Assert.assertTrue("Dataset created with id" + idDataset, idDataset != null);

			/** LIST DATASET */
			String listDatasetJSON = "{\"iddataset\":\"" + idDataset + "\"}";
			String listSet = datasetDS.listDataset(listDatasetJSON);

			System.out.println("-------");
			System.out.println("List set: " + listSet);
			System.out.println("-------");

			Assert.assertTrue(getFieldValueFromJsonText(listSet, Constants.STATUS_FIELD) == null);

			

			/** LIST COLUMNS */
			String listColumns = datasetDS.listColumns(listDatasetJSON);

			System.out.println("-------");
			System.out.println("List columns: " + listColumns);
			System.out.println("-------");

			Assert.assertTrue(getFieldValueFromJsonText(listColumns, Constants.STATUS_FIELD) == null);

			String updateColumnsMetadata = "{\"iddataset\":\"" + idDataset + "\",\"columns\":[{\"visibility\":\"true\",\"name\":\"the_geom\",\"alias\":\"the_geom\",\"type\":\"MultiLineString\"}]}";
			String updatedColumns = datasetDS.updateColumnsMetadata(updateColumnsMetadata);
			Assert.assertTrue(getFieldValueFromJsonText(updatedColumns, Constants.STATUS_FIELD)
					.equalsIgnoreCase(Constants.STATUS_DONE));

			/** UPDATE DATASET */

			String updateDatasetJSON = "{\"iddataset\":\"" + idDataset
					+ "\",\"datasetname\": \"datasetSHAPETest\",\"realname\": \"zone.shp\",\"iddatasource\":\""
					+ idDatasource + "\",\"description\": \"newDesc\"}";
			String updateSet = datasetDS.updateDataset(updateDatasetJSON);
			Assert.assertTrue(getFieldValueFromJsonText(updateSet, Constants.STATUS_FIELD)
					.equalsIgnoreCase(Constants.STATUS_DONE));
			listSet = datasetDS.listDataset(listDatasetJSON);

			System.out.println("-------");
			System.out.println("List set: " + listSet);
			System.out.println("-------");
			Assert.assertTrue(getFieldValueFromJsonText(listSet, Constants.STATUS_FIELD) == null);
			Assert.assertTrue(
					getFieldValueFromJsonText(listSet, Constants.DESCRIPTION_FIELD).equalsIgnoreCase("newDesc"));

		} finally {
			if (StringUtils.isNotEmpty(idDatasource)) {
				String deleteDatasourceJSON = "{\"iddatasource\":\"" + idDatasource + "\"}";
				String jsonDatasourceDeleted = datasourceDS.deleteDatasource(deleteDatasourceJSON);
				Assert.assertTrue(getFieldValueFromJsonText(jsonDatasourceDeleted, Constants.STATUS_FIELD)
						.equalsIgnoreCase(Constants.STATUS_DONE));
			}

		}
		System.out.println("-------");
		System.out.println("Test datasets service end");
		System.out.println("-------");
	}

}
